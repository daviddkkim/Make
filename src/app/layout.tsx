import type { Metadata } from "next";
import "./globals.css";
import TopNavigation from "./(app)/components/TopNavigation";
import { GeistSans } from "geist/font/sans";
import { GeistMono } from "geist/font/mono";
import { Toaster } from "sonner";
import { CheckIcon, InfoIcon, LoaderIcon, OctagonXIcon } from "lucide-react";
import { ClerkProvider } from "@clerk/nextjs";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <ClerkProvider>
      <html lang="en" className={`${GeistSans.variable} ${GeistMono.variable}`}>
        <body>
          <div className="text-sm flex flex-col overflow-scroll-y">
            <main className="h-[calc(100vh-44px)]">
              {children}
              <Toaster
                position="bottom-right"
                toastOptions={{
                  unstyled: true,
                  classNames: {
                    toast:
                      "flex bg-stone-950 border rounded-md align-items px-3 py-2 w-full",
                    title: "text-sm text-stone-200 font-normal ml-1 leading-5	",
                    description: "text-sm text-stone-400 font-normal ml-1",
                    actionButton:
                      "ml-auto text-sm font-normal h-[20px] px-2 flex items-center justify-center rounded-sm text-stone-900 bg-gradient-to-b from-stone-100 to-stone-200 border border-stone-200 bg-transparent",
                    cancelButton:
                      "ml-auto text-sm font-normal h-[20px] px-2 flex items-center justify-center rounded-sm text-stone-900 bg-gradient-to-b from-stone-100 to-stone-200 border border-stone-200 bg-transparent",
                  },
                }}
                icons={{
                  success: (
                    <div className="h-4 w-4 rounded-full border border-green-600 bg-gradient-to-b from-green-500 to-green-600 flex items-center justify-center translate-y-[2px]">
                      <CheckIcon
                        size={10}
                        className="translate-x-[1px] text-green-50"
                      />{" "}
                    </div>
                  ),
                  info: (
                    <div className="h-4 w-4 rounded-full border border-indigo-600 bg-gradient-to-b from-indigo-500 to-indigo-600 flex items-center justify-center translate-y-[2px]">
                      <InfoIcon
                        size={10}
                        className="translate-x-[.5px] text-indigo-50"
                      />{" "}
                    </div>
                  ),
                  error: (
                    <div className="h-4 w-4 rounded-full border border-rose-600 bg-gradient-to-b from-rose-500 to-rose-600 flex items-center justify-center translate-y-[2px]">
                      <OctagonXIcon
                        size={10}
                        className="translate-x-[.5px] text-rose-50"
                      />{" "}
                    </div>
                  ),
                  loading: (
                    <div className="h-4 w-4 rounded-full border border-amber-600 bg-gradient-to-b from-amber-500 to-amber-600 flex items-center justify-center translate-y-[2px]">
                      <LoaderIcon
                        size={10}
                        className="translate-x-[.5px] text-amber-50"
                      />{" "}
                    </div>
                  ),
                }}
              />
            </main>
          </div>
        </body>
      </html>
    </ClerkProvider>
  );
}
